{"version":3,"file":"scripts/5f94193bd4ff44c494fc.pnpm.l10n.js.js","mappings":"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","sources":["webpack://internetactivities/./node_modules/l10n.js/l10n.js"],"sourcesContent":["/*\r\n * l10n.js\r\n * 2014-05-02\r\n * \r\n * By Eli Grey, http://eligrey.com\r\n * Licensed under the MIT License\r\n *   See https://github.com/eligrey/l10n.js/blob/master/LICENSE.md\r\n */\r\n\r\n/*global XMLHttpRequest, setTimeout, document, navigator, ActiveXObject*/\r\n\r\n/*! @source http://purl.eligrey.com/github/l10n.js/blob/master/l10n.js*/\r\n\r\n(function () {\r\n\"use strict\";\r\n\r\nvar\r\n  undef_type = \"undefined\"\r\n, string_type = \"string\"\r\n, nav = self.navigator\r\n, String_ctr = String\r\n, has_own_prop = Object.prototype.hasOwnProperty\r\n, load_queues = {}\r\n, localizations = {}\r\n, FALSE = !1\r\n, TRUE = !0\r\n// the official format is application/vnd.oftn.l10n+json, though l10n.js will also\r\n// accept application/x-l10n+json and application/l10n+json\r\n, l10n_js_media_type = /^\\s*application\\/(?:vnd\\.oftn\\.|x-)?l10n\\+json\\s*(?:$|;)/i\r\n, XHR\r\n\r\n// property minification aids\r\n, $locale = \"locale\"\r\n, $default_locale = \"defaultLocale\"\r\n, $to_locale_string = \"toLocaleString\"\r\n, $to_lowercase = \"toLowerCase\"\r\n\r\n, array_index_of = Array.prototype.indexOf || function (item) {\r\n\tvar\r\n\t  len = this.length\r\n\t, i   = 0\r\n\t;\r\n\t\r\n\tfor (; i < len; i++) {\r\n\t\tif (i in this && this[i] === item) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn -1;\r\n}\r\n, request_JSON = function (uri) {\r\n\tvar req  = new XHR(),\r\n\t\tdata = {};\r\n\t\r\n\t// sadly, this has to be blocking to allow for a graceful degrading API\r\n\treq.open(\"GET\", uri, FALSE);\r\n\treq.send(null);\r\n\t\r\n\t// Status codes can be inconsistent across browsers so we simply try to parse\r\n\t// the response text and catch any errors. This deals with failed requests as\r\n\t// well as malformed json files.\r\n\ttry {\r\n\t\tdata = JSON.parse(req.responseText);\r\n\t} catch(e) {\r\n\t\t// warn about error without stopping execution\r\n\t\tsetTimeout(function () {\r\n\t\t\t// Error messages are not localized as not to cause an infinite loop\r\n\t\t\tvar l10n_err = new Error(\"Unable to load localization data: \" + uri);\r\n\t\t\tl10n_err.name = \"Localization Error\";\r\n\t\t\tthrow l10n_err;\r\n\t\t}, 0);\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n, load = String_ctr[$to_locale_string] = function (data) {\r\n\t// don't handle function.toLocaleString(indentationAmount:Number)\r\n\tif (arguments.length > 0 && typeof data !== \"number\") {\r\n\t\tif (typeof data === string_type) {\r\n\t\t\tload(request_JSON(data));\r\n\t\t} else if (data === FALSE) {\r\n\t\t\t// reset all localizations\r\n\t\t\tlocalizations = {};\r\n\t\t} else {\r\n\t\t\t// Extend current localizations instead of completely overwriting them\r\n\t\t\tvar locale, localization, message;\r\n\t\t\tfor (locale in data) {\r\n\t\t\t\tif (has_own_prop.call(data, locale)) {\r\n\t\t\t\t\tlocalization = data[locale];\r\n\t\t\t\t\tlocale = locale[$to_lowercase]();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!(locale in localizations) || localization === FALSE) {\r\n\t\t\t\t\t\t// reset locale if not existing or reset flag is specified\r\n\t\t\t\t\t\tlocalizations[locale] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (localization === FALSE) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// URL specified\r\n\t\t\t\t\tif (typeof localization === string_type) {\r\n\t\t\t\t\t\tif (String_ctr[$locale][$to_lowercase]().indexOf(locale) === 0) {\r\n\t\t\t\t\t\t\tlocalization = request_JSON(localization);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// queue loading locale if not needed\r\n\t\t\t\t\t\t\tif (!(locale in load_queues)) {\r\n\t\t\t\t\t\t\t\tload_queues[locale] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tload_queues[locale].push(localization);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (message in localization) {\r\n\t\t\t\t\t\tif (has_own_prop.call(localization, message)) {\r\n\t\t\t\t\t\t\tlocalizations[locale][message] = localization[message];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Return what function.toLocaleString() normally returns\r\n\treturn Function.prototype[$to_locale_string].apply(String_ctr, arguments);\r\n}\r\n, process_load_queue = function (locale) {\r\n\tvar\r\n\t  queue = load_queues[locale]\r\n\t, i = 0\r\n\t, len = queue.length\r\n\t, localization\r\n\t;\r\n\t\r\n\tfor (; i < len; i++) {\r\n\t\tlocalization = {};\r\n\t\tlocalization[locale] = request_JSON(queue[i]);\r\n\t\tload(localization);\r\n\t}\r\n\t\r\n\tdelete load_queues[locale];\r\n}\r\n, use_default\r\n, localize = String_ctr.prototype[$to_locale_string] = function () {\r\n\tvar\r\n\t  using_default = use_default\r\n\t, current_locale = String_ctr[using_default ? $default_locale : $locale]\r\n\t, parts = current_locale[$to_lowercase]().split(\"-\")\r\n\t, i = parts.length\r\n\t, this_val = this.valueOf()\r\n\t, locale\r\n\t;\r\n\r\n\tuse_default = FALSE;\r\n\t\r\n\t// Iterate through locales starting at most-specific until a localization is found\r\n\tdo {\r\n\t\tlocale = parts.slice(0, i).join(\"-\");\r\n\t\t// load locale if not loaded\r\n\t\tif (locale in load_queues) {\r\n\t\t\tprocess_load_queue(locale);\r\n\t\t}\r\n\t\tif (locale in localizations && this_val in localizations[locale]) {\r\n\t\t\treturn localizations[locale][this_val];\r\n\t\t}\r\n\t}\r\n\twhile (i --> 1);\r\n\t\r\n\tif (!using_default && String_ctr[$default_locale]) {\r\n\t\tuse_default = TRUE;\r\n\t\treturn localize.call(this_val);\r\n\t}\r\n\r\n\treturn this_val;\r\n}\r\n;\r\n\r\nif (typeof XMLHttpRequest === undef_type && typeof ActiveXObject !== undef_type) {\r\n\tvar AXO = ActiveXObject;\r\n\t\r\n\tXHR = function () {\r\n\t\ttry {\r\n\t\t\treturn new AXO(\"Msxml2.XMLHTTP.6.0\");\r\n\t\t} catch (xhrEx1) {}\r\n\t\ttry {\r\n\t\t\treturn new AXO(\"Msxml2.XMLHTTP.3.0\");\r\n\t\t} catch (xhrEx2) {}\r\n\t\ttry {\r\n\t\t\treturn new AXO(\"Msxml2.XMLHTTP\");\r\n\t\t} catch (xhrEx3) {}\r\n\t\r\n\t\tthrow new Error(\"XMLHttpRequest not supported by this browser.\");\r\n\t};\r\n} else {\r\n\tXHR = XMLHttpRequest;\r\n}\r\n\r\nString_ctr[$default_locale] = String_ctr[$default_locale] || \"\";\r\nString_ctr[$locale] = nav && (nav.language || nav.userLanguage) || \"\";\r\n\r\nif (typeof document !== undef_type) {\r\n\tvar\r\n\t  elts = document.getElementsByTagName(\"link\")\r\n\t, i = elts.length\r\n\t, localization\r\n\t;\r\n\t\r\n\twhile (i--) {\r\n\t\tvar\r\n\t\t  elt = elts[i]\r\n\t\t, rel = (elt.getAttribute(\"rel\") || \"\")[$to_lowercase]().split(/\\s+/)\r\n\t\t;\r\n\t\t\r\n\t\tif (l10n_js_media_type.test(elt.type)) {\r\n\t\t\tif (array_index_of.call(rel, \"localizations\") !== -1) {\r\n\t\t\t\t// multiple localizations\r\n\t\t\t\tload(elt.getAttribute(\"href\"));\r\n\t\t\t} else if (array_index_of.call(rel, \"localization\") !== -1) {\r\n\t\t\t\t// single localization\r\n\t\t\t\tlocalization = {};\r\n\t\t\t\tlocalization[(elt.getAttribute(\"hreflang\") || \"\")[$to_lowercase]()] =\r\n\t\t\t\t\telt.getAttribute(\"href\");\r\n\t\t\t\tload(localization);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n}());\r\n"],"names":["XHR","use_default","undef_type","string_type","nav","self","navigator","String_ctr","String","has_own_prop","Object","prototype","hasOwnProperty","load_queues","localizations","FALSE","l10n_js_media_type","array_index_of","Array","indexOf","item","len","this","length","i","request_JSON","uri","req","data","open","send","JSON","parse","responseText","e","setTimeout","l10n_err","Error","name","load","arguments","locale","localization","message","call","push","Function","apply","process_load_queue","queue","localize","using_default","parts","split","this_val","valueOf","slice","join","XMLHttpRequest","ActiveXObject","AXO","xhrEx1","xhrEx2","xhrEx3","language","userLanguage","document","elts","getElementsByTagName","elt","rel","getAttribute","test","type"],"sourceRoot":""}