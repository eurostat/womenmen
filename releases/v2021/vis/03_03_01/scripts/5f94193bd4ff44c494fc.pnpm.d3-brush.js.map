{"version":3,"file":"scripts/5f94193bd4ff44c494fc.pnpm.d3-brush.js","mappings":"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","sources":["webpack://internetactivities/./node_modules/d3-brush/src/constant.js","webpack://internetactivities/./node_modules/d3-brush/src/event.js","webpack://internetactivities/./node_modules/d3-brush/src/noevent.js","webpack://internetactivities/./node_modules/d3-brush/src/brush.js"],"sourcesContent":["export default x => () => x;\n","export default function BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    selection: {value: selection, enumerable: true, configurable: true},\n    mode: {value: mode, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n"],"names":["x","BrushEvent","type","sourceEvent","target","selection","mode","dispatch","Object","defineProperties","this","value","enumerable","configurable","_","nopropagation","event","stopImmediatePropagation","preventDefault","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","abs","max","min","Math","number1","e","number2","X","handles","map","input","output","xy","Y","y","cursors","overlay","n","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","t","defaultFilter","ctrlKey","button","defaultExtent","svg","ownerSVGElement","hasAttribute","viewBox","baseVal","width","height","defaultTouchable","navigator","maxTouchPoints","local","node","__brush","parentNode","empty","extent","brushSelection","state","dim","brushX","brushY","touchending","filter","touchable","keys","listeners","handleSize","brush","group","property","initialize","selectAll","data","enter","append","attr","merge","each","handle","d","exit","remove","redraw","on","started","touchmoved","touchended","style","length","emitter","that","args","clean","emit","Emitter","active","touches","apply","arguments","w0","w1","n0","n1","e0","e1","s0","s1","moving","lockX","lockY","__data__","metaKey","altKey","signX","signY","W","N","E","S","dx","dy","shifting","shiftKey","points","Array","from","i","identifier","pointer","point0","slice","beforestart","pts","move","moved","ended","view","keydowned","keyupped","call","start","p","changedTouches","cur","point","noevent","clearTimeout","setTimeout","end","keyCode","tween","selection0","selection1","clear","prototype","starting","datum","constant","keyModifiers"],"sourceRoot":""}